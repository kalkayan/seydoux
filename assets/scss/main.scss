$gray-400: #ced4da !default;
$border-color: $gray-400 !default;

@import "bootstrap/scss/bootstrap";
@import 'base/base';
@import 'components/components';


@mixin make-responsive-container($padding-x: $container-padding-x, $max-width: $max-width) {
  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;
}


.seyx {
    .container {
        @include make-responsive-container(1rem, 1200px);
    }

    a {
        text-decoration: none;
    }

    img {
        max-width: 100%;
        margin: 1rem 0;
    }
	
	blockquote {
		& > p {
			color: $gray-600;
			font-size: .8rem;
		}
	}
}


h1, h2, h3, h4, h5, h6 {
    font-weight: 400;
    font-family: 'Poppins', sans-serif;
}

p {
    letter-spacing: 1px;
    font-size: 0.9rem;
    color: $gray-900;
}

.row {
    margin: 0;
}

$tablet-width: 768px;
$desktop-width: 1024px;

@mixin phone {
    @media (max-width: #{$tablet-width}) {
        @content;
    }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

.border {
    &-end {
        &-md {
           // TODO : border-end is only visible at md
	   @include tablet {
		border-right: 1px solid $gray-300;
	   }
        }
    }

    &-start {
        &-sm {
            // TODO : border-start is only visible at sm
            @include phone {
                border-left: 1px solid $gray-300;
            }
        }
    }

    &-bottom {
        &-sm {
            // TODO : border-start is only visible at sm
            @include phone {
                border-bottom: 1px solid $gray-300;
            }
        }
    }
}


.highlight {
    border-radius: 7px;

    & > div {
        background-color: transparent !important;
    }
}

pre {
    padding: 1rem 1.3rem;
    margin: 2.5rem 0;
    color: $gray-300;
    border-radius: 7px;
    line-height: 1.4rem;
    background: $gray-800 !important;

    :not(&) > code {
        background-color: $gray-200;
        padding: 3px 7px;
        border-radius: 6px;
    }
}

.section {
    &-single {
        article.content {
            h1 {
                margin-top: 4rem;
            }

            h2 {
                margin-top: 3rem;
            }

            h3 {
                margin-top: 2rem;
            }

            h1, h2, h3 {
                margin-bottom: 2rem;
				font-weight: 700;
            }

			h4, h5, h6 {
				margin-bottom: 1.2rem;
				font-weight: 600;
			}

            p, li {
                font-size: 1.05rem;
                color: $gray-700;
                letter-spacing: 1.2px;
                line-height: 165%;
                text-align: justify;
            }

			p {
				margin-bottom: 2rem;
			}

			hr {
				margin: 2.5rem 0;
			}

            blockquote {
                background: #f9f9f9;
                border-left: 10px solid #ccc;
                margin: 1.5em 0;
                padding: 1rem 10px;
            }
            
            blockquote p {
                display: inline;
            }
        }
    }
}

.block {
    &.warning {
        background: $yellow-100;
        border: 4px solid $yellow-400;

        &::before {
            content: "⚠️";
        }
    }

    margin: 1.5em 0;
    padding: 1rem 10px;
    
    & p {
        display: inline;
    }
}


@keyframes hue {
  from {
    -webkit-filter: hue-rotate(0deg);
  }
  to {
    -webkit-filter: hue-rotate(-360deg);
  }
}
